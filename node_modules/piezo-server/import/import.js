/*!
 * Module: Module
 *
 * @author Andjey Guzhovskiy, <me.the.ascii@gmail.com>
 * @copyright (c) 2013 Andjey Guzhovskiy
 * @licence MIT
 * @version 0.0.1
 */

var
    database = 'test1',	// 'kent'
    host = 'localhost',
    port = 27017,
    col_accounts = 'accounts',
    col_cards = 'cards',
    card_type = 'profile',

    fs = require( 'fs' ),
    async = require( 'async' ),
    file = fs.readFileSync( './accounts.csv' ),
    lines = file.toString().split( /\r\n/ ),
    linesLen = lines.length,
    spend = + new Date(),
    count = 0,
    skip = 0,	// crash: 4810;

// process
    perOne = 1,

// database
    mongodb = require( 'mongodb' ),
    Db = require( 'mongodb' ).Db,
    Server = require('mongodb').Server,
    ObjectId = require( 'mongodb' ).ObjectID,
    client = new Db(
        database,
        new Server( host, port, {}),
        { w: 1 }
    ),

    // collections
    collection,
    cards;

client.open(
    function( err ){

        console.log( 'mongodb:', err || 'connected' );
        collection = new mongodb.Collection(client, col_accounts);
        cards = new mongodb.Collection( client, col_cards );

        if ( err )
            throw err;
        else {
            console.log( 'Running import!' );
            run();
        }
    });

// Store

// DEBUG (!)
//lines = lines.splice( -2 );
//console.log( 'lines', lines );

function run(){

    var
        i = 0,
        queue = [];
    if ( !lines.length )
        return end();
    // if ( count <= skip )


    function iterate( next ) {
        var
            line = lines.pop();
        // check
        if ( '' == line
            || undefined === line )
            return next();
        var
            doc = {},
            names = line.split( ',');

        // fill
        var f = ('' + ( names.shift() || '' )).trim(),
            l = ('' + ( names.shift() || '' )).trim(),
            p = ('' + ( names.shift() || '' )).trim();
        doc.name =
             ( f ? f + ' ' : '' ) +
             ( l ? l + ' ' : '' ) +
             ( p ? p : '' );

        doc.email = ('' + ( names.shift() || '' )).trim();
        doc.phone = ('' + ( names.shift() || '' )).trim();

        // modify phone
        var nums = doc.phone.match( /^(\d{2})(\d{3})(\d{2})(\d{2})/ );
        if ( !nums ) {
            if ( doc.phone ) {
                console.log( 'Bad phone:', count, linesLen - count, doc.phone );
                doc.phone = ''; }
        } else {
            doc.phone = '0 (' + nums[1] +') '+ nums[2] +'-'+ nums[3] +'-'+ nums[4];
        }

        names.shift();  // id
        doc.login = ('' + ( names.shift() || '' )).trim();
        var h = ('' + ( names.shift() || '' )).trim();
        h = String( h ).toLowerCase().substr( 2 );
        if ( h.length == 32 )
            doc.hash = h;
        else console.log( 'Bad hash:', count, linesLen - count, h );

        names.shift();  // created

        doc.role = 'visitor';
        doc.active = true;

        ++count;

        //console.log( 'user:', count, user, password );
        if ( count %5000 == 0 )
            console.log( 'Counted:', count );

        importing( doc, next );
    }

    // async
    // n-times
    for( ; i < perOne; i++) {
        queue.push( iterate );
    }
    async.parallel(
        queue,
        function( err, res ) {
            //console.log( 'complete:', count, err, res );
            process.nextTick( run );
        }
    );
}

function end() {
    console.log( 'count', count, 'spend', (+new Date()) - spend );
}

function importing( user, next ) {

    //console.log( count, 'User:', user );

    // create user
    var auth = {
            active: user.active,
            login: user.login,
            hash: user.hash,
            role: user.role,
            password: null,
            imported: true          // import flag (!)
        };

    // insert
    collection.insert( auth, { safe: true },
        function( err, docs ) {
            // console.log( 'authusers:', err, docs );
            if ( !err ) {
                var
                    doc = docs && docs.length && docs.shift(),
                    user_id = doc && doc._id;

                // create card

                var person = {
                    account_id: ObjectId( ''+ user_id ),
                    type: card_type,

                    name: user.name,
                    phone: user.phone,
                    email: user.email,

                    // defaults
                    agree_age: true,
                    agree_info: true,
                    agree_rules: true,
                    day: 1,
                    month: 1,
                    year: 1900
                };

                // insert
                cards.insert( person, { safe: true }, next );
//                    function( err, docs ) {
//                        // console.log( 'persons:', err, docs );
//                        if ( err && err.code == 11000 ) err = null;
//                        next( err );
//                    });

            } else next( err );
//            else
//            if ( err && err.code == 11000 ) err = null;
//                next( err );
        });
}
