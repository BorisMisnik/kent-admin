/*!
 * Module: Module
 *
 * @author Andjey Guzhovskiy, <me.the.ascii@gmail.com>
 * @copyright (c) 2013 Andjey Guzhovskiy
 * @licence CLOSED
 * @version 0.0.1
 */

// libs
var winston = require( 'winston' ),
    logger = new ( winston.Logger )(),
    // transports
    transports = {
        mongodb: require( 'winston-mongodb' ).MongoDB,
        console: winston.transports.Console,
        file: winston.transports.File
    };

// locals
var errorLevel = 'debug',
    config = {};


// Boot

// levels and colors
logger.setLevels( winston.config.syslog.levels );
winston.addColors( winston.config.syslog.colors );


// Base

exports.app = logger;
exports.configure =
    function( cfg ) {
        var cfg = cfg || {},
            defaults = cfg.defaults;

        // config
        if ( cfg.mongodb ) {
            var mongo = cfg.mongodb;
            config.mongodb = {
                level: mongo.level || cfg.level || errorLevel,
                host: mongo.host || defaults.mongodb.host || 'localhost',
                port: mongo.port || defaults.mongodb.port || 27017,
                db: mongo.database || defaults.mongodb.database,
                collection: mongo.collection || 'logs'
            };
        }
        if ( cfg.console ) {
            config.console = {
                level: cfg.console.level || cfg.level || errorLevel,
                colorize: true
            };
        }
        if ( cfg.file ) {
            var file = cfg.file;
            config.file = {
                filename: file.path || './output.log',
                level: file.level || cfg.level || errorLevel
            };
        }

    };

exports.init =
    function( libs, callback ) {
        // once
        if ( config.mongodb ) {
            console.log(( 'Log to mongo database ('+ config.file.level +')' ).green,
                'at', config.mongodb.host +':'+ config.mongodb.port +'/'+ config.mongodb.db +'/'+ config.mongodb.collection );
            logger
                //.remove( transports.mongodb )
                .add( transports.mongodb, config.mongodb );
        }
        if ( config.console ) {
            console.log(( 'Log to console ('+ config.console.level +')' ).green );
            logger
                //.remove( transports.console )
                .add( transports.console, config.console );
        }
        if ( config.file ) {
            console.log(( 'Log to file ('+ config.file.level +')' ).green );
            logger
                //.remove( transports.file )
                .add( transports.file, config.file );
        }

        console.log(( 'Log system initialized (with '+ Object.keys( logger.transports ).length +' transports)' ).magenta );
        callback && callback();
    };


// API

exports.report =
    function( query, callback ) {
        // todo
        logger.info( 'Get log messages, query:'.green, query );
    };

exports.log = logger[ errorLevel ] || logger.debug;

exports.debug = logger.debug;
exports.info = logger.info;
exports.notice = logger.notice;
exports.warn = logger.warning;
exports.error = logger.error;
exports.crit = logger.crit;
exports.alert = logger.alert;
exports.emerg = logger.emerg;

