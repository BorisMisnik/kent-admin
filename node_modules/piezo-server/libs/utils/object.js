/*!
 * Module: Module
 *
 * @author Andjey Guzhovskiy, <me.the.ascii@gmail.com>
 * @copyright (c) 2013 Andjey Guzhovskiy
 * @licence CLOSED
 * @version 0.0.1
 */

exports.merge =
    function() {
        var
            objects = [].slice.call( arguments ),
            results = {};

        objects.forEach(
            function( obj ) {
                if ( obj )
                    next( results, obj );
            });

        // recurse
        function next( dest, obj ) {
            if ( !obj )
                return;
            Object.keys( obj )
                .forEach( function( key ) {
                    try {
                        // Property in destination object set; update its value.
                        if ( Object === obj[ key ].constructor ) {
                            //dest[ key ] =
                            next( dest[ key ], obj[ key ]);
                        } else {
                            dest[ key ] = obj[ key ];
                        }
                    } catch( e ) {
                        // Property in destination object not set; create it and set its value.
                        dest[ key ] = obj[ key ];

                    }
                });
        }
        // merged
        return results;
    };
